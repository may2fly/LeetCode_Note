/**
 * @Description: 7. 整数反转
 * 给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。
 * 如果反转后整数超过 32 位的有符号整数的范围 [−2^31,  2^31 − 1] ，就返回  0
 * 假设环境不允许存储 64 位整数（有符号或无符号）
 * 示例 1:
 * 输入: 123
 * 输出: 321
 * 示例 2:
 * 输入: -123
 * 输出: -321
*/

/**
 * 解题思路：
 * 1.定义一个Int数，原始值不断变小，结果不断变大，一直到原始值为0
 * 2。越界条件判断，如果结果值小于最小值或最大值的移位，下次肯定会溢出
*/

class Solution {
    public int reverse(int x) {
        int N = 0;
        while(x != 0){
            if(N<Integer.MIN_VALUE/10 || N > Integer.MAX_VALUE/10) return 0;
            N = N*10 + x%10;
            x = x/10;
        }

        return N;
    }
}